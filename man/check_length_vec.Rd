% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_single_vector.R
\name{check_length_vec}
\alias{check_length_vec}
\title{Check the length of the input vector through an expression}
\usage{
check_length_vec(
  vec,
  expr,
  vec_arg = "vec",
  raise = "error",
  alert_message = NULL,
  na.rm = FALSE,
  n.evaluation_frame = 2,
  ...
)
}
\arguments{
\item{vec}{Vector to check.}

\item{expr}{expression returning a boolean and evaluation the length of the vector
(the nature and the actual meaning of the expression is not checked by this function).}

\item{vec_arg}{String indicating how to address vec in the alert message (default 'vec').}

\item{raise}{Character string equal to one of "error", "warning", "message" or "accumulate_message"
(default error). Set the type of alert that is created. Note: 'accumulate_message' can be ignored
most of times because it is used internally in combination with impose_accumulate_behavior.
Either the case it raises a message without the "i" bullet.}

\item{alert_message}{String reporting the alert message. Its formatted by cli_bullets function.
Default NULL, in this case a standard message with the appropriate bullet sign is used.}

\item{na.rm}{logical (default FALSE), indicating if NA must be excluded prior computations.}

\item{n.evaluation_frame}{numeric, defines the number of calling frame to look up for the evaluation
of the alert message in respect to where the function calling the alert is run.
The default value points to the function frame. So it's possible to simply points
to upper frames (as well as to below frames but is not recommended).}

\item{...}{not of direct use.}
}
\value{
invisible NULL
}
\description{
If the expression argument returns FALSE then the alert is raised. This system has been
choose in order to easily conduct test for combinations of equality, greater than and less than.
However no check is done on the provided expression and its return value.
Therefore if a whatsoever expression returning a boolean or not returning a boolean is passed,
then the function will continue to work or not in unexpected ways.
}
