% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_args.R
\name{check_args}
\alias{check_args}
\title{Check caller function arguments}
\usage{
check_args(
  args,
  expected_types,
  null = FALSE,
  flag = FALSE,
  with = "typeof",
  recycle_expected_types = NULL,
  raise = "error",
  alert_message = NULL,
  header = "default",
  n_evaluation_frame = 0,
  quickalert = TRUE,
  ...
)
}
\arguments{
\item{args}{Character vector reporting the calling function arguments to check (parameter names).}

\item{expected_types}{Character vector reporting the expected type/classes of args. Follow the order of args.
It's possible to report only one class for arg, in this case the expected type must be contained in the vector class of arg.
In addition is possible to use "integerish" to set an expectation of a integerish object (a defualt tolerance is used).}

\item{null}{Logical vector of the same length of args or of length 1, indicating whether the correspondent args can be null.
If of length one the vector is recycled to args length.}

\item{flag}{Logical vector of the same length of args or of length 1, indicating whether the correspondent args have to be of length 1.
If of length one the vector is recycled to args length}

\item{with}{Character vector indicating which functions to use to get the actual types/class on which the expectation must be checked.
Must be of the same length of args or of length 1. If of length one the vector is recycled to args length.
Possible values are:
'typeof': declare the use of the "typeof" function,
'class': declare the use of the "class" function,
'integerish': declare a check internally performed via class_integerish returning "integerish" for rlang-defined-integerish objects.}

\item{recycle_expected_types}{Numeric vector that allows to recycle expected_types following its order and the numbers specified in this vector.}

\item{raise}{Character string equal to one of "error", "warning" or "message" (default error). Set the type of alert that is created.}

\item{alert_message}{Character vector reporting the alert message. Default NULL, in this case a standard message is used.
It's also possible to pass a list of strings that is displayed as a nominated or numbered list.}

\item{header}{String added at the beginning of the alert message. If "default" the default header is used, otherwise the string passed in.}

\item{n_evaluation_frame}{Numeric, defines the number of stack frame to look down for the evaluation of the glue expressions of the alert message.
The default (0) points to this function frame.}

\item{quickalert}{logical, whether the raised alert has to be of class "quickalert".}

\item{...}{To pass the additional parameters sign, list_format and header (if not in the formals parameters).}
}
\value{
invisible NULL.
}
\description{
Check basic properties of a calling function arguments. The function search the strings passed in args in the calling function enviroment.
Therefore one must use this function before modifying the caller function arguments.
Optimally one should use this function before setting any variable in the caller function.
It's not possible to check arguments passed via dots.
}
