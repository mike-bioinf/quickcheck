% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deprecated_check_args.R
\name{check_integerish_args}
\alias{check_integerish_args}
\title{Check selected arguments of a calling function to be integer-like}
\usage{
check_integerish_args(
  args,
  null = FALSE,
  alert_message = NULL,
  header = "default",
  n_evaluation_frame = 0,
  quickalert = TRUE,
  ...
)
}
\arguments{
\item{args}{character vector reporting the arguments of the outer function to check.}

\item{null}{Single logical, whether args can be NULL or not in addiction to the "normal" expected type (default FALSE).}

\item{alert_message}{Character vector reporting the alert message. Default NULL, in this case a standard message is used.
It's also possible to pass a list of strings that is displayed as a nominated or numbered list.}

\item{header}{String added at the beginning of the alert message. If "default" the default header is used, otherwise the string passed in.}

\item{n_evaluation_frame}{Numeric, defines the number of stack frame to look down for the evaluation of the glue expressions of the alert message.
The default (0) points to this function frame.}

\item{quickalert}{logical, whether the raised alert has to be of class "quickalert".}

\item{...}{To pass the additional parameters sign, list_format and header (if not in the formals parameters).}
}
\value{
invisible NULL.
}
\description{
Allows to check for integer-like arguments according to R tolerance.
Integer like numbers are either integer typed value (e.g. 10L) or integer like double (e.g. 10.0).
}
\details{
Double values with small imprecision like 10.00000000000001 are considered integer due to R's numerical tolerance.
Therefore this function is not optimal in such extreme cases.
}
