% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_single_vec.R, R/make_test_function.R
\name{check_absence_vec}
\alias{check_absence_vec}
\alias{test_absence_vec}
\title{Check the absence of specified values in a vector}
\usage{
check_absence_vec(
  vec,
  values,
  vec_arg = "vec",
  raise = "error",
  alert_message = NULL,
  header = "default",
  n_evaluation_frame = 0,
  quickalert = TRUE,
  ...
)

test_absence_vec(
  vec,
  values,
  vec_arg = "vec",
  raise = "error",
  alert_message = NULL,
  header = "default",
  n_evaluation_frame = 0,
  quickalert = TRUE,
  ...
)
}
\arguments{
\item{vec}{Vector to check.}

\item{values}{Character vector of values searched in vec.}

\item{vec_arg}{String indicating how to address vec in the alert message (default 'vec').}

\item{raise}{Character string equal to one of "error", "warning" or "message" (default error). Set the type of alert that is created.}

\item{alert_message}{Character vector reporting the alert message. Default NULL, in this case a standard message is used.
It's also possible to pass a list of strings that is displayed as a nominated or numbered list.}

\item{header}{Character string to add at the beginning of the alert message. If "default" the default header is used, otherwise the string passed in.}

\item{n_evaluation_frame}{numeric, defines the number of stack frame to look down for the evaluation of the glue expressions of the alert message.
The default value (0) points to the frame above this function frame. So to point to the frame below this function frame you have to set 2.}

\item{quickalert}{logical, whether the raised alert has to be of class "quickalert".}

\item{...}{To pass the additional parameters sign, list_format and header (if not in the formals parameters).}
}
\value{
Depending on the function prefix: the "check" function returns the condition otherwise NULL invisibly,
the "test" function returns TRUE if the condition would be raised and FALSE otherwise.
}
\description{
Check the absence of specified values in a vector
}
